// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ArticleContent /> render() renders the component 1`] = `
<div>
  <t
    customDecorators={Array []}
    editorClassName="main-editor"
    editorState={
      EditorState {
        "_immutable": Immutable.Record {
          "allowUndo": true,
          "currentContent": Immutable.Record {
            "entityMap": Object {},
            "blockMap": Immutable.OrderedMap {
              "637gr": Immutable.Record {
                "key": "637gr",
                "type": "unstyled",
                "text": "Initialized from content state.",
                "characterList": Immutable.List [
                  Immutable.Record {
                    "style": Immutable.OrderedSet [],
                    "entity": null,
                  },
                  Immutable.Record {
                    "style": Immutable.OrderedSet [],
                    "entity": null,
                  },
                  Immutable.Record {
                    "style": Immutable.OrderedSet [],
                    "entity": null,
                  },
                  Immutable.Record {
                    "style": Immutable.OrderedSet [],
                    "entity": null,
                  },
                  Immutable.Record {
                    "style": Immutable.OrderedSet [],
                    "entity": null,
                  },
                  Immutable.Record {
                    "style": Immutable.OrderedSet [],
                    "entity": null,
                  },
                  Immutable.Record {
                    "style": Immutable.OrderedSet [],
                    "entity": null,
                  },
                  Immutable.Record {
                    "style": Immutable.OrderedSet [],
                    "entity": null,
                  },
                  Immutable.Record {
                    "style": Immutable.OrderedSet [],
                    "entity": null,
                  },
                  Immutable.Record {
                    "style": Immutable.OrderedSet [],
                    "entity": null,
                  },
                  Immutable.Record {
                    "style": Immutable.OrderedSet [],
                    "entity": null,
                  },
                  Immutable.Record {
                    "style": Immutable.OrderedSet [],
                    "entity": null,
                  },
                  Immutable.Record {
                    "style": Immutable.OrderedSet [],
                    "entity": null,
                  },
                  Immutable.Record {
                    "style": Immutable.OrderedSet [],
                    "entity": null,
                  },
                  Immutable.Record {
                    "style": Immutable.OrderedSet [],
                    "entity": null,
                  },
                  Immutable.Record {
                    "style": Immutable.OrderedSet [],
                    "entity": null,
                  },
                  Immutable.Record {
                    "style": Immutable.OrderedSet [],
                    "entity": null,
                  },
                  Immutable.Record {
                    "style": Immutable.OrderedSet [],
                    "entity": null,
                  },
                  Immutable.Record {
                    "style": Immutable.OrderedSet [],
                    "entity": null,
                  },
                  Immutable.Record {
                    "style": Immutable.OrderedSet [],
                    "entity": null,
                  },
                  Immutable.Record {
                    "style": Immutable.OrderedSet [],
                    "entity": null,
                  },
                  Immutable.Record {
                    "style": Immutable.OrderedSet [],
                    "entity": null,
                  },
                  Immutable.Record {
                    "style": Immutable.OrderedSet [],
                    "entity": null,
                  },
                  Immutable.Record {
                    "style": Immutable.OrderedSet [],
                    "entity": null,
                  },
                  Immutable.Record {
                    "style": Immutable.OrderedSet [],
                    "entity": null,
                  },
                  Immutable.Record {
                    "style": Immutable.OrderedSet [],
                    "entity": null,
                  },
                  Immutable.Record {
                    "style": Immutable.OrderedSet [],
                    "entity": null,
                  },
                  Immutable.Record {
                    "style": Immutable.OrderedSet [],
                    "entity": null,
                  },
                  Immutable.Record {
                    "style": Immutable.OrderedSet [],
                    "entity": null,
                  },
                  Immutable.Record {
                    "style": Immutable.OrderedSet [],
                    "entity": null,
                  },
                  Immutable.Record {
                    "style": Immutable.OrderedSet [],
                    "entity": null,
                  },
                ],
                "depth": 0,
                "data": Immutable.Map {},
              },
            },
            "selectionBefore": Immutable.Record {
              "anchorKey": "637gr",
              "anchorOffset": 0,
              "focusKey": "637gr",
              "focusOffset": 0,
              "isBackward": false,
              "hasFocus": false,
            },
            "selectionAfter": Immutable.Record {
              "anchorKey": "637gr",
              "anchorOffset": 0,
              "focusKey": "637gr",
              "focusOffset": 0,
              "isBackward": false,
              "hasFocus": false,
            },
          },
          "decorator": null,
          "directionMap": Immutable.OrderedMap {
            "637gr": "LTR",
          },
          "forceSelection": false,
          "inCompositionMode": false,
          "inlineStyleOverride": null,
          "lastChangeType": null,
          "nativelyRenderedContent": null,
          "redoStack": Immutable.Stack [],
          "selection": Immutable.Record {
            "anchorKey": "637gr",
            "anchorOffset": 0,
            "focusKey": "637gr",
            "focusOffset": 0,
            "isBackward": false,
            "hasFocus": false,
          },
          "treeMap": Immutable.OrderedMap {
            "637gr": Immutable.List [
              Immutable.Record {
                "start": 0,
                "end": 31,
                "decoratorKey": null,
                "leaves": Immutable.List [
                  Immutable.Record {
                    "start": 0,
                    "end": 31,
                  },
                ],
              },
            ],
          },
          "undoStack": Immutable.Stack [],
        },
      }
    }
    localization={
      Object {
        "locale": "en",
        "translations": Object {},
      }
    }
    readOnly={true}
    stripPastedStyles={false}
    toolbarHidden={true}
    toolbarOnFocus={false}
  />
</div>
`;
